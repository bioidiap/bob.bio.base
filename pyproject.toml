[build-system]
    requires = ["setuptools>=61.0.0", "wheel"]
    build-backend = "setuptools.build_meta"

[project]
    name = "bob.bio.base"
    version = "8.0.0"
    requires-python = ">=3.9"
    description = "Tools for running biometric recognition experiments"
    dynamic = ["readme"]
    license = {text = "BSD 3-Clause License"}
    authors = [
    {name = "Manuel Gunther", email = "siebenkopf@googlemail.com"},
    ]
    keywords = ["bob", "biometric recognition", "evaluation"]

    classifiers=[
        "Framework :: Bob",
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: BSD License",
        "Natural Language :: English",
        "Programming Language :: Python",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
    ]
    dependencies = [
        "bob==12.0.0",
        "bob.io.base==5.1.0",
        "bob.learn.em==3.3.0",
        "bob.measure==6.1.0",
        "bob.pipelines==4.0.0",
        "clapper==1.0.1",
        "click==8.1.3",
        "click-plugins==1.1.1",
        "dask==2023.1.0",
        "numpy==1.23.5",
        "pandas==1.5.2",
        "scipy==1.10.0",
        "setuptools==66.0.0",
        "tabulate==0.9.0",
    ]

[project.urls]
    documentation = "https://www.idiap.ch/software/bob/docs/bob/bob.bio.base/v8.0.0/sphinx/"
    homepage = "https://pypi.org/project/bob.bio.base/"
    repository = "https://gitlab.idiap.ch/bob/bob.bio.base"
    changelog = "https://gitlab.idiap.ch/bob/bob.bio.base/-/releases"

[project.optional-dependencies]
    qa = ["pre-commit"]
    doc = [
        "sphinx==5.3.0",
        "sphinx-rtd-theme==1.1.1",
        "sphinx-autodoc-typehints==1.21.8",
        "auto-intersphinx==1.0.2",
        "sphinxcontrib-programoutput==0.17",
        "matplotlib==3.6.2",
        "dask-ml==2022.5.27",
        "bob.bio.face",
        "bob.bio.vein",
        "bob.bio.spear",
        "bob.bio.video",
        ]
    test = [
        "pytest==7.2.1",
        "pytest-cov==4.0.0",
        "coverage==7.0.5",
        "dask-ml==2022.5.27",
        "matplotlib==3.6.2",
        ]

[tool.setuptools]
    zip-safe = false
    package-dir = {"" = "src"}

[tool.setuptools.dynamic]
    readme = {file = "README.md", content-type = "text/markdown"}

[project.entry-points."bob.bio.config"]
    dummy             = "bob.bio.base.config.dummy.config"  # for test purposes only
    dummy2            = "bob.bio.base.config.dummy.config2"  # for test purposes only
    dummy_samples     = "bob.bio.base.config.dummy.samples_list"  # for test purposes only
    atnt              = "bob.bio.base.config.database.atnt"

[project.entry-points."bob.bio.database"]
    atnt              = "bob.bio.base.config.database.atnt:database"
    dummy             = "bob.bio.base.config.dummy.database:database"  # for test purposes only

[project.entry-points."bob.cli"]
    bio               = "bob.bio.base.script.bio:bio"
    vulnerability     = "bob.bio.base.script.vulnerability:vulnerability"

[project.entry-points."bob.bio.cli"]
    resources         = "bob.bio.base.script.resources:resources"
    annotate          = "bob.bio.base.script.annotate:annotate"
    annotate-samples  = "bob.bio.base.script.annotate:annotate_samples"
    metrics           = "bob.bio.base.script.commands:metrics"
    multi-metrics     = "bob.bio.base.script.commands:multi_metrics"
    roc               = "bob.bio.base.script.commands:roc"
    det               = "bob.bio.base.script.commands:det"
    epc               = "bob.bio.base.script.commands:epc"
    hist              = "bob.bio.base.script.commands:hist"
    cmc               = "bob.bio.base.script.commands:cmc"
    dir               = "bob.bio.base.script.commands:dir"
    gen               = "bob.bio.base.script.gen:gen"
    evaluate          = "bob.bio.base.script.commands:evaluate"
    sort              = "bob.bio.base.script.sort:sort"
    pipeline          = "bob.bio.base.script.pipeline:pipeline"
    compare-samples   = "bob.bio.base.script.compare_samples:compare_samples"

[project.entry-points."bob.bio.annotator"]
    dummy             = "bob.bio.base.config.dummy.annotator:annotator"

[project.entry-points."bob.bio.pipeline.cli"]
    simple         = "bob.bio.base.script.pipeline_simple:pipeline_simple"
    score-norm     = "bob.bio.base.script.pipeline_score_norm:pipeline_score_norm"
    transform      = "bob.bio.base.script.pipeline_transform:pipeline_transform"
    train          = "bob.bio.base.script.pipeline_train:pipeline_train"

[project.entry-points."bob.vuln.cli"]
    metrics           = "bob.bio.base.script.vuln_commands:metrics"
    hist              = "bob.bio.base.script.vuln_commands:hist"
    det               = "bob.bio.base.script.vuln_commands:det"
    roc               = "bob.bio.base.script.vuln_commands:roc"
    epc               = "bob.bio.base.script.vuln_commands:epc"
    epsc              = "bob.bio.base.script.vuln_commands:epsc"
    gen               = "bob.bio.base.script.vuln_commands:gen"
    fmr_iapmr         = "bob.bio.base.script.vuln_commands:fmr_iapmr"
    evaluate          = "bob.bio.base.script.vuln_commands:evaluate"

[tool.distutils.bdist_wheel]
    universal = true

[tool.isort]
    profile = "black"
    line_length = 80
    order_by_type = true
    lines_between_types = 1

[tool.black]
    line-length = 80

[tool.pytest.ini_options]
    markers = [
        "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    ]
    addopts = [
    "--import-mode=append",
    "--cov-report=term-missing",
    "--cov=bob.bio.base",
    ]
    junit_logging = "all"
    junit_log_passing_tests = false

[profile]
    repository_url = "git@gitlab.idiap.ch:bob/dev-profile.git"
    commit_hash = "ade723be1f11feddb7bece235de32cc98953dc07"
